"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=450,exports.ids=[450],exports.modules={37450:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__);var index_esm2017=__webpack_require__(63942),esm_index_esm2017=__webpack_require__(34859),dist_esm_index_esm2017=__webpack_require__(41122);class RemoteConfigCompatImpl{constructor(app,_delegate){this.app=app,this._delegate=_delegate}get defaultConfig(){return this._delegate.defaultConfig}set defaultConfig(value){this._delegate.defaultConfig=value}get fetchTimeMillis(){return this._delegate.fetchTimeMillis}get lastFetchStatus(){return this._delegate.lastFetchStatus}get settings(){return this._delegate.settings}set settings(value){this._delegate.settings=value}activate(){return(0,dist_esm_index_esm2017.QZ)(this._delegate)}ensureInitialized(){return(0,dist_esm_index_esm2017.wX)(this._delegate)}fetch(){return(0,dist_esm_index_esm2017.Q2)(this._delegate)}fetchAndActivate(){return(0,dist_esm_index_esm2017.xS)(this._delegate)}getAll(){return(0,dist_esm_index_esm2017.go)(this._delegate)}getBoolean(key){return(0,dist_esm_index_esm2017.Pf)(this._delegate,key)}getNumber(key){return(0,dist_esm_index_esm2017.Dx)(this._delegate,key)}getString(key){return(0,dist_esm_index_esm2017.KF)(this._delegate,key)}getValue(key){return(0,dist_esm_index_esm2017.NA)(this._delegate,key)}setLogLevel(logLevel){(0,dist_esm_index_esm2017.Ub)(this._delegate,logLevel)}}__name(RemoteConfigCompatImpl,"RemoteConfigCompatImpl");function registerRemoteConfigCompat(firebaseInstance){firebaseInstance.INTERNAL.registerComponent(new esm_index_esm2017.wA("remoteConfig-compat",remoteConfigFactory,"PUBLIC").setMultipleInstances(!0).setServiceProps({isSupported:dist_esm_index_esm2017.Gb})),firebaseInstance.registerVersion("@firebase/remote-config-compat","0.2.0")}function remoteConfigFactory(container,{instanceIdentifier:namespace}){const app=container.getProvider("app-compat").getImmediate(),remoteConfig=container.getProvider("remote-config").getImmediate({identifier:namespace});return new RemoteConfigCompatImpl(app,remoteConfig)}__name(registerRemoteConfigCompat,"registerRemoteConfigCompat"),__name(remoteConfigFactory,"remoteConfigFactory"),registerRemoteConfigCompat(index_esm2017.Z)}};